Documentation

:h2:Installing songs

You may put all songs to ~/.ultrastar/songs or to /usr/local/share/games/ultrastar/songs, even if they are not in UltraStar format. In future versions we will provide something Performous-specific and possibly also look for Frets on Fire song folders.


:h2:Singing

:h3:How does it work?

The game records your voice via a microphone, attached to your computer. The audio is recorded and realtime FFT analysis is done on it. This analysis reveals which frequency bands contain audio (peaks). Further analysis is used to find out the exact audio frequencies inside each band, and to combine base frequencies and their harmonics into single tones. Finally, some temporal (over time) filtering is applied to the detected tones to smooth out the output.

It doesn't matter if you didn't take university courses on acoustics and mathematics, and none of that makes any sense: you will get a wave on screen, displaying your singing pitch.

:h3:Scoring and note types

	Regular notes: displayed in light blue (1x points)
	Golden notes: displayed in gold (2x points)
	Freestyle notes: displayed with text "FREESTYLE", pitch does not matter (1x points)

The singing octave does not matter, so as long as you get the right note in any octave, you will get full points. Singing near the correct note also gives some points, but the amount of points per second decreases as you get farther from the right tone. Singing within the right semitone always gives full points, so you may actually be off by a quarter tone and still get the points.

The maximum number of points is always 10000, but it is practically unreachable in real songs, usual scores being in the range of 2000-9000, depending mostly on the skills of the singer, but also on the song: even though the maximum is the same, slower songs are generally easier to sing.

Oh, and in case you were wondering: you will not get full points by placing the microphone near a speaker, because it will also pick up other instruments, which usually have incorrect pitch. Expect to get about 3000 points with this method :)


:h2:Instruments

Any connected Guitar Hero and Rock Band instruments are detected automatically. By default the keyboard is used as a guitar controller too, but this can be disabled in the config menu.

Before a song starts, you have a few seconds to choose your difficulty level. Do this by picking a fret or by beating a drum pad. The leftmost fret/pad is for easy, the one next to that is medium and so on. If the song has multiple guitar tracks (e.g. guitar and bass), picking the orange fret (with one of the others to choose difficulty) switches between tracks. If you select anything incorrectly, you will get to play, but the difficulty will default to easy.

:h3:Basic gameplay

Colored notes, corresponding to the colored frets on your guitar or to the colored pads on your drums, scroll towards you. An orange line in drum notes is for the bass drum (foot pedal).

Drummers need to hit the corresponding drums when the notes pass the black line.

Guitarists can already hold down the frets before the notes reach the black line, hitting the the strum bar to play the note at the right time. Chords (combinations of multiple frets) must be played entirely. The fret does not need to be released when the note ends or before playing the next note (unless the note does not allow that fret).

:h3:Hold notes (guitars only)

After playing a note you need to keep holding the fret(s) as long as the line continues. If you release early, you will stop receiving points for the hold. Additionally, for long notes you need to use the whammy bar to do a pitch bend or otherwise no points will be awarded after a while.

Pressing or releasing other frets has no effect, as long as the note being played is held correctly.

:h3:Fret masking (guitars only)

As with a real guitar, it does not matter what you do with lower frets while holding a higher fret (a fret closer to the strum bar). Take advantage of this when playing difficult passages where you would otherwise only briefly release a fret to play another note in between.

Masking can only be used when playing solo notes, it does not work for chords.

:h3:Hammer-ons and pull-offs (guitars only)

Hammerable notes are denoted by a little white ball (if using 3d notes) or a white figure (if using 2d notes) on the head of the note. If the note is active, the symbol is bright white, otherwise it is grey. Hammerable notes are active when you are playing correctly, but they will deactivate as soon as you make a mistake. So, if you miss the previous note, you cannot hammer the next one either.

When a note is hammerable and active, you can play it without the strum bar, by simply pressing the fret (hammer on) or by releasing a higher fret so that the correct fret becomes the highest fret (pull-off).

:h3:God mode (guitars only)

Playing correctly increases your star power so that eventually you will be able to invoke GOD MODE where all your mistakes will be ignored and hammerable notes stay active all the time. The mode only lasts for a few seconds, so use it wisely. When "God mode ready!" is displayed, you can activate the mode by raising your guitar to a vertical position.

:h3:Scoring

The maximum number of points is always 10000. Hitting all the notes correctly is not enough to reach this, your timing must also be very good. Using masking or hammering does not affect the scoring.

Picking or drumming incorrectly will reduce your points slightly, but the score cannot go below 0.


:h2:Audio configuration

Normally Performous detects everything automatically and just works. This process may, however, fail if other applications are keeping your sound card to themselves or if you have strange audio hardware.

One problem worth a special mention is PulseAUdio, an audio server used by modern Linux distros. If you are having any audio issues, try starting Performous with PulseAudio suspended:

	pasuspender -- performous

The pasuspender program comes with PulseAudio utilities.

:h3:Audio playback (if autodetection fails)

Use --pdev &lt;device string&gt; to set the audio API (alsa, pulse, jack, ...). Some devices also take parameters, e.g. alsa:plughw:0,2 will use driver alsa with ALSA device string "plughw:0,2" (conversion plugin + first sound card and the third subdevice of that). Use --pdevhelp to get the list of available devices and further help.

:h3:Microphones (if autodetection fails)

--mics may be used for manual configuration and --michelp displays the list of devices and their usage. You may also specify the mics option multiple times to use more than one sound card, if you have many.

If you don't specify anything, Performous defaults to two microphones and will prefer the SingStar or Rock Band ones, if available.

:h3:Microphone to speakers

Performous does not currently support forwarding audio from microphones to audio playback device. Preferrably you should use hardware for this, e.g. see if you can adjust your volume controls to allow this, if the microphones are connected to your sound card. With separate USB microphones you may use some external software for forwarding but we haven't tried that.

Adding software forwarding (and effects) in Performous is planned, but it will take a while to get implemented.


:h2:Adjusting audio sync

Usually it takes a fraction of a second for the sound to come out of the speakers after it has been sent out by Performous. Similarly, there's a delay on audio input. Some flat panel displays also introduce rather long delay from when the image is rendered to when it is actually displayed. Performous has to compensate for all these latencies in order to allow smooth gameplay.

:h3:A/V synchronization (all modes)

This is the difference between the time it takes for the audio and the video to get out of the system. If the setting is incorrect, notes on screen will pass the black line at an incorrect time.

Adjust with <strong>F5</strong> and <strong>F6</strong> in singing screen.

:h3:Audio roundtrip latency (singing only)

This is the time it takes for the audio to go out thru the sound card, to the speakers, and in via the microphone and the sound card back, all around until Performous has detected the tone. If the setting is incorrect, the pitch wave will appear mispositioned on the notes, when the singer matches his timing on what he hears (rather than on the notes seen on screen).

While in singing screen, press <strong>F4</strong> to enter synth mode, which will play the notes using synthesized sine waves. Place the microphone near a speaker and adjust with <strong>F7</strong> and <strong>F8</strong> until the pitch wave matches the notes.

:h3:Audio/controller latency (instruments and dancing)

This setting controls the synchronization between audio output and controller input. The value should be the controller input latency plus the audio output latency. Adjust it so that you can hit the notes most precisely by ear (without looking on the screen).

:h3:Tips for reducing audio latency

In order to see your singing on screen as realtime as possible, you should try to minimize the audio input latency and the video output latency. The video output latency can be affected by frame rate and by your display, but there is little you can do about it, and also the amount of latency is usually not more than 50 milliseconds at most. The audio input latency is affected by resampling/mixing audio servers such as PulseAudio. Preferrably you should use ALSA or JACK directly with your card, as this will provide the minimum latency.

Using analog connection to your stereo instead of S/PDIF can also often reduce the latency slightly.


:h2:Configuration menu

Most settings are modifiable via the config menu but unfortunately it does not currently allow modifying any options with text in them. These may need to be specified with commandline options or input directly to the XML config file.

Press Ctrl+S to save the currently active settings after changes or to store the --pdev and --mics settings you entered permanently.

See the keys page for more information.


:h2:Making songs

Performous does not currently contain (useful) song editor. UltraStar format songs can be modified with a text editor or with one of the many available editors such as <a href="http://www.yass-along.com/home.html">YASS</a>. FoF format songs can be modified and created with a MIDI sequencer like <a href="http://www.rosegardenmusic.com/">Rosegarden</a>. It is recommended to use an existing song as a template when making a new one. With both formats, you need audio tracks (background with or without vocals and each instrument needs a separate track) in MP3 or other supported format and it is also good to have a cover image and a background video or image.


:h2:IRC channel

You can reach us at <a href="irc://irc.freenode.net/performous">#performous</a> on Freenode. If you are not familiar with IRC, you can use <a href="http://webchat.freenode.net/?channels=#performous" target="performous_irc">webchat</a>.

